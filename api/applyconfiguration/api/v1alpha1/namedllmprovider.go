// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "sigs.k8s.io/gateway-api/apis/v1"
)

// NamedLLMProviderApplyConfiguration represents a declarative configuration of the NamedLLMProvider type for use
// with apply.
type NamedLLMProviderApplyConfiguration struct {
	Name                          *v1.SectionName `json:"name,omitempty"`
	LLMProviderApplyConfiguration `json:",inline"`
}

// NamedLLMProviderApplyConfiguration constructs a declarative configuration of the NamedLLMProvider type for use with
// apply.
func NamedLLMProvider() *NamedLLMProviderApplyConfiguration {
	return &NamedLLMProviderApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithName(value v1.SectionName) *NamedLLMProviderApplyConfiguration {
	b.Name = &value
	return b
}

// WithOpenAI sets the OpenAI field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OpenAI field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithOpenAI(value *OpenAIConfigApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.OpenAI = value
	return b
}

// WithAzureOpenAI sets the AzureOpenAI field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AzureOpenAI field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithAzureOpenAI(value *AzureOpenAIConfigApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.AzureOpenAI = value
	return b
}

// WithAnthropic sets the Anthropic field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Anthropic field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithAnthropic(value *AnthropicConfigApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.Anthropic = value
	return b
}

// WithGemini sets the Gemini field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Gemini field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithGemini(value *GeminiConfigApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.Gemini = value
	return b
}

// WithVertexAI sets the VertexAI field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VertexAI field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithVertexAI(value *VertexAIConfigApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.VertexAI = value
	return b
}

// WithBedrock sets the Bedrock field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bedrock field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithBedrock(value *BedrockConfigApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.Bedrock = value
	return b
}

// WithHost sets the Host field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Host field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithHost(value string) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.Host = &value
	return b
}

// WithPort sets the Port field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Port field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithPort(value int32) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.Port = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithPath(value *PathOverrideApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.Path = value
	return b
}

// WithAuthHeader sets the AuthHeader field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthHeader field is set to the value of the last call.
func (b *NamedLLMProviderApplyConfiguration) WithAuthHeader(value *AuthHeaderApplyConfiguration) *NamedLLMProviderApplyConfiguration {
	b.LLMProviderApplyConfiguration.AuthHeader = value
	return b
}
